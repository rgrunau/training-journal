datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}


model User {
  id   String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  clerkId String @unique
  email String @unique
  firstName String
  lastName String
  entries JournalEntry[]
  userPrefrences UserPrefrences?
}

model JournalEntry {
  id   String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String
  user User @relation(fields: [userId], references: [id])

  content String @db.Text
  analysis Analysis?
  //this is a compound index. It means that the combination of userId and id must be unique
  // this adds a security layer to the app so you have to be the logged in user in order to see your own entries
  @@unique([userId, id])
}

model Analysis {
  id   String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  entryId String
  entry JournalEntry @relation(fields: [entryId], references: [id])

  mood String
  summary String @db.Text
  color String
  negative Boolean

  @@unique([entryId])
}

model NewsSources {
  id   String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String @unique
  userPrefrencesId String
  userPrefrences UserPrefrences @relation(fields: [userPrefrencesId], references: [id])

  @@index([userPrefrencesId])
}

model UserPrefrences {
  id  String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  userId String
  user User @relation(fields: [userId], references: [id])

  NewsSources NewsSources[]
  @@unique([userId])
}